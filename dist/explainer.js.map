{"version":3,"sources":["src/explainer.js"],"names":["constructor","text","now","Date","replaceAll","cancelable","found","match","length","currency","price","parseInt","cabinclass","change","booking_class","weekday_to","split","weekday_from","issued_until","date","date_string","toISOString","substring","advanced_reservation_days","stopover","found2","no_luggage","travel_period","travel_commenced","from","to","travel_period_blackout","travel_period_from","travel_period_to","min_stay","sunday_rule","findand","findor","max_stay","child_charge","infant_charge","infant_seat_charge","explain","lang","result","map","month_day_period_to_yearly_periods","flat","sort","a","b","period","join","this_year_from","this_year_to","getFullYear","next_year_from","next_year_to","last_year","console","log","regex","periods","day","month_name","year","trim","months","toLocaleDateString","month","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["export default class {\n  text = '';\n  now = new Date();\n\n  constructor(text) {\n    this.text = text.replaceAll(/\\n+/g, ' ').replaceAll(/[ ]+/g, ' ');\n  }\n\n  get cancelable() {\n    let found = this.text.match(\n      /CANCELLATIONS (?:BEFORE DEPARTURE|ANY TIME) CHARGE (\\w\\w\\w) (\\d+)/\n    );\n    if (null !== found && 3 === found.length) {\n      return { currency: found[1], price: parseInt(found[2]) };\n    }\n    found = this.text.match(\n      /(?:BEFORE DEPARTURE|ANY TIME) TICKET IS NON-REFUNDABLE/\n    );\n    if (null != found) {\n      return 'no';\n    }\n    found = this.text.match(\n      /CANCELLATIONS (?:BEFORE DEPARTURE|ANY TIME) CANCELLATIONS PERMITTED/\n    );\n    if (null != found) {\n      return 'yes';\n    }\n\n    return null;\n  }\n\n  get cabinclass() {\n    let found = this.text.match(\n      /THESE FARES APPLY FOR ((?:\\w+ )+)CLASS SERVICE/\n    );\n    if (null !== found && 2 === found.length) {\n      switch (found[1]) {\n        case 'ECONOMY ':\n          return 'Y';\n        case 'BUSINESS ':\n          return 'C';\n        case 'PREMIUM ECONOMY ':\n          return 'W';\n        case 'FIRST ':\n          return 'F';\n      }\n    }\n    return null;\n  }\n\n  get change() {\n    let found = this.text.match(\n      /CHANGES (?:BEFORE DEPARTURE|ANY TIME) CHARGE (\\w\\w\\w) (\\d+)/\n    );\n    if (null !== found && 3 === found.length) {\n      return { currency: found[1], price: parseInt(found[2]) };\n    }\n    found = this.text.match(\n      /(?:BEFORE DEPARTURE|ANY TIME) CHANGES NOT PERMITTED/\n    );\n    if (null != found) {\n      return 'no';\n    }\n    found = this.text.match(\n      /CHANGES (?:BEFORE DEPARTURE|ANY TIME) CHANGES PERMITTED/\n    );\n    if (null != found) {\n      return 'yes';\n    }\n\n    return null;\n  }\n\n  get booking_class() {\n    let found = this.text.match(/General notes.*?\\s([A-Z])\\s/);\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n    return found[1];\n  }\n\n  get weekday_to() {\n    let found = this.text.match(/TO [A-Z ]+ - PERMITTED ((\\w\\w\\w\\/)+\\w\\w\\w)/);\n    if (null === found || 3 !== found.length) {\n      return null;\n    }\n\n    return found[1].split('/');\n  }\n\n  get weekday_from() {\n    let found = this.text.match(/FROM [A-Z ]+ - PERMITTED ((\\w\\w\\w\\/)+\\w\\w\\w)/);\n    if (null === found || 3 !== found.length) {\n      return null;\n    }\n\n    return found[1].split('/');\n  }\n\n  get issued_until() {\n    let found = this.text.match(\n      /TICKETS MUST BE ISSUED (?:ON\\/AFTER \\d{2}\\w{3} \\d{2} AND |)ON\\/BEFORE (\\d{2})(\\w{3}) (\\d{2})/\n    );\n\n    if (null === found || 4 !== found.length) {\n      return null;\n    }\n\n    let date = new Date(found[1] + ' ' + found[2] + ' ' + found[3] + ' UTC');\n    let date_string = date.toISOString().substring(0, 10);\n    return date_string;\n  }\n\n  get advanced_reservation_days() {\n    let found = this.text.match(\n      /RESERVATIONS FOR ALL SECTORS (?:AND TICKETING )*ARE REQUIRED AT LEAST (\\d{1,3}) DAYS/\n    );\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return parseInt(found[1]);\n  }\n\n  get stopover() {\n    let found = this.text.match(/FREE STOPOVER PERMITTED/);\n    let found2 = this.text.match(\n      /(STOPOVERS NOT PERMITTED)|(NO STOPOVERS PERMITTED)/\n    );\n    return found ? 'free' : found2 ? 'not permitted' : null;\n  }\n\n  get no_luggage() {\n    let found = this.text.match(/(?:NO|ZERO) BAGGAGE ALLOWANCE MUST BE /);\n    return found != null;\n  }\n\n  get travel_period() {\n    let found = this.#parse_travel_period(\n      /Seasonal restrictions\\s*PERMITTED ([A-Z0-9 ]+) ON/\n    );\n    if (null === found) {\n      return null;\n    }\n\n    return found;\n  }\n\n  get travel_commenced() {\n    let found = this.text.match(\n      /VALID FOR TRAVEL COMMENCING (?:ON\\/AFTER (\\d{2}\\w{3} \\d{2}) AND |)ON\\/\\s*BEFORE (\\d{2}\\w{3} \\d{2})/\n    );\n\n    if (null === found || 3 !== found.length) {\n      return null;\n    }\n\n    return {\n      from: found[1] ? this.#parse_date(found[1]) : null,\n      to: found[2] ? this.#parse_date(found[2]) : null,\n    };\n  }\n\n  get travel_period_blackout() {\n    return this.#parse_travel_period(/TRAVEL IS NOT PERMITTED ([A-Z0-9 ]+)./);\n  }\n\n  get travel_period_from() {\n    return this.#parse_travel_period(\n      /(?:FROM [A-Z ]+|OUTBOUND) - PERMITTED ([A-Z0-9 ]+) FOR EACH/\n    );\n  }\n\n  get travel_period_to() {\n    return this.#parse_travel_period(\n      /(?:TO [A-Z ]+|INBOUND) - PERMITTED ([A-Z0-9 ]+) FOR EACH/\n    );\n  }\n\n  get min_stay() {\n    let found = this.text.match(/NO EARLIER THAN (\\d+) DAYS AFTER/);\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return parseInt(found[1]);\n  }\n\n  get sunday_rule() {\n    let found = this.text.match(/THE FIRST SUN/);\n    if (found === null) {\n      return null;\n    }\n    let findand = this.text.match(/AND - TRAVEL FROM/);\n    let findor = this.text.match(/OR - TRAVEL FROM/);\n    return findand != null ? 'and' : findor != null ? 'or' : true;\n  }\n\n  get max_stay() {\n    let found = this.text.match(/NO LATER THAN (\\d+) MONTHS AFTER/);\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return parseInt(found[1]);\n  }\n\n  get child_charge() {\n    let found = this.text.match(\n      /ACCOMPANIED CHILD 2-11(?:\\. ID REQUIRED|) - (?:CHARGE |)(\\d{1,3}|NO DISCOUNT) (?:PERCENT OF THE FARE\\.|OR )/\n    );\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return 'NO DISCOUNT' === found[1] ? 1 : parseInt(found[1]) / 100;\n  }\n\n  get infant_charge() {\n    let found = this.text.match(\n      /INFANT UNDER 2 WITHOUT A SEAT - CHARGE (\\d{1,3}|NO DISCOUNT) PERCENT OF THE FARE\\./\n    );\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return 'NO DISCOUNT' === found[1] ? 1 : parseInt(found[1]) / 100;\n  }\n\n  get infant_seat_charge() {\n    let found = this.text.match(\n      /INFANT UNDER 2 WITH A SEAT(?:\\. ID REQUIRED|) - (?:CHARGE |)(\\d{1,3}|NO DISCOUNT) (?:PERCENT OF THE FARE\\.|OR )/\n    );\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    return 'NO DISCOUNT' === found[1] ? 1 : parseInt(found[1]) / 100;\n  }\n\n  explain(lang = 'en') {\n    let result = '';\n\n    if ('de' === lang) {\n      result += `Buchbar ist der Tarif ${\n        this.issued_until\n          ? `bis zum ${this.#date_to_text(this.issued_until, lang)} `\n          : ''\n      }für `;\n\n      if (this.travel_period) {\n        result += `Reisen zwischen dem ${this.travel_period\n          .map(({ from, to }) =>\n            this.constructor.month_day_period_to_yearly_periods(\n              from,\n              to,\n              this.now\n            )\n          )\n          .flat()\n          .sort((a, b) => a.from > b.from)\n          .map(\n            (period) =>\n              `${this.#date_to_text(period.from, lang)} ${\n                period.from == null ? '' : ' - '\n              } ${this.#date_to_text(period.to, lang)}`\n          )\n          .join(', ')}`;\n      } else if (this.travel_period_from) {\n        result += `Abflüge zwischen dem ${this.travel_period_from\n          .map(({ from, to }) =>\n            this.constructor.month_day_period_to_yearly_periods(\n              from,\n              to,\n              this.now\n            )\n          )\n          .flat()\n          .sort((a, b) => a.from > b.from)\n          .map(\n            (period) =>\n              `${this.#date_to_text(period.from, lang)} - ${this.#date_to_text(\n                period.to,\n                lang\n              )}`\n          )\n          .join(', ')} `;\n        if (this.travel_period_to) {\n          result += `und Rückflüge zwischen dem ${this.travel_period_to\n            .map(({ from, to }) =>\n              this.constructor.month_day_period_to_yearly_periods(\n                from,\n                to,\n                this.now\n              )\n            )\n            .flat()\n            .sort((a, b) => a.from > b.from)\n            .map(\n              (period) =>\n                `${this.#date_to_text(\n                  period.from,\n                  lang\n                )} - ${this.#date_to_text(period.to, lang)}`\n            )\n            .join(', ')} `;\n        }\n      } else if (this.travel_period_to) {\n        result += `Rückflüge zwischen dem ${this.travel_period_to\n          .map(({ from, to }) =>\n            this.constructor.month_day_period_to_yearly_periods(\n              from,\n              to,\n              this.now\n            )\n          )\n          .flat()\n          .sort((a, b) => a.from > b.from)\n          .map(\n            (period) =>\n              `${this.#date_to_text(period.from, lang)} - ${this.#date_to_text(\n                period.to,\n                lang\n              )}`\n          )\n          .join(', ')} `;\n      } else if (this.travel_commenced) {\n        if (this.travel_commenced.from && this.travel_commenced.to) {\n          result += `Abflüge zwischen dem ${this.#date_to_text(\n            this.travel_commenced.from,\n            lang\n          )} und ${this.#date_to_text(this.travel_commenced.to, lang)}`;\n        } else if (this.travel_commenced.from) {\n          result += `Abflüge nach dem ${this.#date_to_text(\n            this.travel_commenced.from,\n            lang\n          )}`;\n        } else if (this.travel_commenced.to) {\n          result += `Abflüge bis spätestens ${this.#date_to_text(\n            this.travel_commenced.to,\n            lang\n          )}`;\n        }\n      } else {\n        result += `Flüge ohne einen bestimmten Reisezeitraum.`;\n      }\n\n      result += `. `;\n\n      if (null === this.issued_until) {\n        result += `Der Tarif hat kein Ablaufdatum, kann aber trotzdem jederzeit zurückgezogen werden. `;\n      }\n\n      if (this.min_stay) {\n        result += `Der Mindestaufenthalt beträgt ${this.min_stay} Tage${\n          'or' === this.sunday_rule\n            ? ` oder eine Nacht von Samstag auf Sonntag`\n            : 'and' === this.sunday_rule\n            ? ` und eine Nacht von Samstag auf Sonntag`\n            : ''\n        }. `;\n      }\n\n      if (this.max_stay) {\n        result += `Der maximale Aufenthalt beträgt ${\n          1 === this.max_stay ? `einen Monat` : `${this.max_stay} Monate`\n        }. `;\n      }\n\n      result += `\\nDie Tickets werden in Buchungsklasse ${this.booking_class} ausgestellt`;\n      if (this.advanced_reservation_days) {\n        result += ` und müssen mindestens ${this.advanced_reservation_days} Tage vor Abflug gebucht werden. `;\n      } else {\n        result += `.`;\n      }\n\n      if ('free' === this.stopover) {\n        result += `Mindestens ein kostenloser Stopover ist erlaubt.`;\n      } else if ('not permitted' === this.stopover) {\n        result += `Stopover sind nicht erlaubt.`;\n      }\n    } else {\n      // Fallback to en\n    }\n\n    return result;\n  }\n\n  #parse_travel_period(regex) {\n    let found = this.text.match(regex);\n\n    if (null === found || 2 !== found.length) {\n      return null;\n    }\n\n    let periods = found[1].split('OR').map((period) => {\n      let [from, to] = period\n        .split('THROUGH')\n        .map((date) => this.#parse_date(date));\n      return { from, to };\n    });\n    return periods;\n  }\n\n  #parse_date(date) {\n    let [, day, month_name, year = null] = date\n      .trim()\n      .match(/(\\d{2})(\\w{3})(?: (\\d{2})|)/);\n\n    return (year ? '20' + year + '-' : '') + months[month_name] + '-' + day;\n  }\n\n  #date_to_text(date, lang = 'en') {\n    if (date == null) {\n      return 'bis zum ';\n    }\n    if (5 === date.length) {\n      return new Date(new Date().getFullYear() + '-' + date).toLocaleDateString(\n        lang,\n        { day: 'numeric', month: 'long' }\n      );\n    }\n\n    return new Date(date).toLocaleDateString(lang, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n    });\n  }\n\n  static month_day_period_to_yearly_periods(from, to, now = new Date()) {\n    if (10 === from.length && 10 === to.length) {\n      if (now > new Date(from) && now > new Date(to)) {\n        return [];\n      }\n      return [{ from, to }];\n    }\n\n    let this_year_from, this_year_to;\n    this_year_from = this_year_to = now.getFullYear();\n    let next_year_from, next_year_to;\n    next_year_from = next_year_to = this_year_from + 1;\n    let last_year = this_year_from - 1;\n\n    if (\n      new Date(this_year_from + '-' + from) > new Date(this_year_to + '-' + to)\n    ) {\n      this_year_to++;\n      next_year_to++;\n    }\n\n    if (\n      now < new Date(this_year_from + '-' + from) &&\n      now < new Date(this_year_to + '-' + to)\n    ) {\n      // Period is in the future\n      return [\n        {\n          from: new Date(this_year_from + '-' + from)\n            .toISOString()\n            .substring(0, 10),\n          to: new Date(this_year_to + '-' + to).toISOString().substring(0, 10),\n        },\n      ];\n    } else if (\n      now > new Date(this_year_from + '-' + from) &&\n      now > new Date(this_year_to + '-' + to)\n    ) {\n      // Period is in the past\n      return [\n        {\n          from: new Date(next_year_from + '-' + from)\n            .toISOString()\n            .substring(0, 10),\n          to: new Date(next_year_to + '-' + to).toISOString().substring(0, 10),\n        },\n      ];\n    } else if (\n      // Currently in Period\n      now > new Date(this_year_from + '-' + from) &&\n      now < new Date(this_year_to + '-' + to)\n    ) {\n      return [\n        {\n          from: new Date(this_year_from + '-' + from)\n            .toISOString()\n            .substring(0, 10),\n          to: new Date(this_year_to + '-' + to).toISOString().substring(0, 10),\n        },\n        {\n          from: new Date(next_year_from + '-' + from)\n            .toISOString()\n            .substring(0, 10),\n          to: new Date(next_year_to + '-' + to).toISOString().substring(0, 10),\n        },\n      ];\n    }\n    console.log('nothing');\n    return [];\n  }\n}\n\nconst months = {\n  JAN: '01',\n  FEB: '02',\n  MAR: '03',\n  APR: '04',\n  MAY: '05',\n  JUN: '06',\n  JUL: '07',\n  AUG: '08',\n  SEP: '09',\n  OCT: '10',\n  NOV: '11',\n  DEC: '12',\n};\n"]}